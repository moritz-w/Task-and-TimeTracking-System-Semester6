// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TaskAndTimeTracking.Persistence.Context;

namespace TaskAndTimeTracking.Migrations
{
    [DbContext(typeof(ApplicationDatabaseContext))]
    partial class ApplicationDatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0-preview5.19227.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TaskAndTimeTracking.Persistence.Entity.ProjectEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(500);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<int>("OwnerId");

                    b.Property<int>("ProgressEstimate");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("TaskAndTimeTracking.Persistence.Entity.ProjectUserAssignment", b =>
                {
                    b.Property<int>("ProjectId");

                    b.Property<int>("UserId");

                    b.HasKey("ProjectId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("ProjectUserAssignment");
                });

            modelBuilder.Entity("TaskAndTimeTracking.Persistence.Entity.TodoEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Done");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<int?>("ProjectId");

                    b.Property<string>("TaskDescription")
                        .HasMaxLength(500);

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("Todos");
                });

            modelBuilder.Entity("TaskAndTimeTracking.Persistence.Entity.TodoUserAssignment", b =>
                {
                    b.Property<int>("TodoId");

                    b.Property<int>("UserId");

                    b.HasKey("TodoId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("TodoUserAssignment");
                });

            modelBuilder.Entity("TaskAndTimeTracking.Persistence.Entity.UserEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AuthorizationLevel");

                    b.Property<string>("EmailAddress")
                        .IsRequired();

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Password")
                        .IsRequired();

                    b.Property<string>("Salt")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("TaskAndTimeTracking.Persistence.Entity.WorkProgressEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(100);

                    b.Property<DateTime>("End");

                    b.Property<int>("PersonId");

                    b.Property<DateTime>("Start");

                    b.Property<int?>("TodoId");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.HasIndex("TodoId");

                    b.ToTable("WorkProgress");
                });

            modelBuilder.Entity("TaskAndTimeTracking.Persistence.Entity.ProjectEntity", b =>
                {
                    b.HasOne("TaskAndTimeTracking.Persistence.Entity.UserEntity", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TaskAndTimeTracking.Persistence.Entity.ProjectUserAssignment", b =>
                {
                    b.HasOne("TaskAndTimeTracking.Persistence.Entity.ProjectEntity", "ProjectEntity")
                        .WithMany("ProjectUserAssignments")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TaskAndTimeTracking.Persistence.Entity.UserEntity", "UserEntity")
                        .WithMany("ProjectUserAssignments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("TaskAndTimeTracking.Persistence.Entity.TodoEntity", b =>
                {
                    b.HasOne("TaskAndTimeTracking.Persistence.Entity.ProjectEntity", "Project")
                        .WithMany("Todos")
                        .HasForeignKey("ProjectId");
                });

            modelBuilder.Entity("TaskAndTimeTracking.Persistence.Entity.TodoUserAssignment", b =>
                {
                    b.HasOne("TaskAndTimeTracking.Persistence.Entity.TodoEntity", "TodoEntity")
                        .WithMany("TodoUserAssignments")
                        .HasForeignKey("TodoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TaskAndTimeTracking.Persistence.Entity.UserEntity", "UserEntity")
                        .WithMany("TodoUserAssignments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TaskAndTimeTracking.Persistence.Entity.WorkProgressEntity", b =>
                {
                    b.HasOne("TaskAndTimeTracking.Persistence.Entity.UserEntity", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TaskAndTimeTracking.Persistence.Entity.TodoEntity", "Todo")
                        .WithMany("WorkProgressEntities")
                        .HasForeignKey("TodoId");
                });
#pragma warning restore 612, 618
        }
    }
}
